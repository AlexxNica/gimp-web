<!--#include virtual="/includes/wgo-xhtml-init.xhtml" -->
<title>GIMP - Controlling GIMP with MIDI devices</title>
<!--#include virtual="/includes/wgo-look-feel.xhtml" -->
<!--#include virtual="/includes/wgo-howto-init.xhtml" -->

<h1>Controlling GIMP with MIDI devices</h1>

<h2>What?</h2>
<p>
   GIMP 2.2 comes with a module that allows to control it using MIDI
   devices.  Currently this is only supported on Linux with either the
   OSS or the ALSA sound drivers. It might work on other platforms as
   well if there is a way to access the raw MIDI stream by opening a
   device.
</p>

<h2>Enabling the MIDI Module</h2>

<p>
   To make the UI of Gimp's MIDI controller visible you need to edit a
   configuration file when the Gimp is not running. Open
   <tt>~/.gimp-2.2/controllerrc</tt> in an editor and add the following
   lines to the end of the file:
</p>

<pre class="code">
(GimpControllerInfo "MIDI"
    (enabled yes)
    (debug-events yes)
    (controller "ControllerMidi"
        (device "alsa")
        (channel -1))
    (mapping))
</pre>

<p>
   Then start the GIMP from a shell (so that you can see textual output we
   need later), open the preferences, go to the "Input Controllers" page in
   the "Input Devices" section and select the newly appeared "MIDI" Tab.
</p>

<h2>Configuring the MIDI Source</h2>

<h3>ALSA:</h3>
<p>
   Enter "alsa" in the "Device" entry in the configuration. Gimp then
   sets up an Alsa-Output-Port (check with "<tt>aconnect -lo</tt>"). You
   can then use your preferred tool to configure Alsa to connect a MIDI
   source to the GIMP. When your MIDI device e.g. provides an Input-Port
   72:0 and Gimp provides the Output-Port 128:0 you can connect the two
   Ports with "<tt>aconnect 72:0 128:0</tt>".
</p>

<h3>OSS:</h3>
<p>
   The Open Sound System provides a device file for the raw MIDI events.
   You need to enter the name of this device file into the "Device"
   entry in the configuration (e.g. "/dev/midi00").
</p>

<h3>The MIDI channel</h3>

<p>
   Each MIDI source sends events on a specific "Channel" (0 to 15,
   sometimes also referred as 1 to 16). You can configure if Gimp should
   listen to all channels (-1) or to just a specific channel.
</p>

<p>
   If your MIDI setup works correctly and the "Dump events from this
   controller" is enabled as well as "Enable this controller" you should
   see some text scrolling by when you hit some keys or turn some
   controllers on your midi device, describing the Event that just
   happened.
</p>

<h2>Assigning Actions to Events</h2>

<p>
   You can now use this information to map MIDI Events to Actions in the
   Gimp. At the bottom of the configuration page is a list with all events
   that Gimp can recognize. Scroll to the event that you want to assign an
   action to and doubleclick its entry. Then select an Action from the
   dialog that pops up and doubleclick its entry. Now this action gets
   invoked when the specific MIDI event happens.
</p>

<p>
   Please note that some actions fit perfectly to some MIDI Events: Actions
   like "context-background-blue-set" can immediately use the numerical
   value provided by midi controller events.
</p>

<p>
   Have fun.
</p>

<!--#include virtual="/includes/wgo-howto-fini.xhtml" -->
    <div>
      <span id="footerleft">
	How To &copy; 2005 <a href="mail:People-Budig_Simon">Simon Budig</a>.
	Licensed under the terms of the
	<a href="http://www.gnu.org/licenses/gpl.html">GNU GPL</a>.
      </span>
      <span id="footerright">
        <a href="mailto:webmaster@gimp.org">webmaster@gimp.org</a>
      </span>
    </div>
<!--#include virtual="/includes/wgo-xhtml-fini.xhtml" -->
