#!/usr/bin/env make
# $Id: Makefile,v 1.14 2005/11/04 21:27:04 neo Exp $
#
include ../../Makefile.defs

CSSFLAGS=-I../../

all: usage configs news

usage:
	@if [ ${DocumentRoot} = "" ]; then echo "USAGE: make DocumentRoot=<DocumentRoot> target"; exit 1; fi

# names ending in 'path' are full pathnames
# otherwise, they are relative to DocumentRoot

news: news-admin.css news-receiver news-batch.cgi news-edit-action.cgi news-edit.cgi news-index.cgi

news-admin.css: news-admin.cpp

configs: news_config.py

#
# You can edit this rule to change the default settings
#
news_config.py: Makefile ../../Makefile.defs
	@(echo "#!/usr/bin/env ${PYTHON}"                         ; \
		echo "# THIS FILE IS AUTOMATICALLY GENERATED."           ; \
		echo "# DO NOT EDIT THIS FILE. See Makefile"             ; \
		echo "import wgo_config"                                 ; \
		echo                                                     ; \
	 echo "news_dir=wgo_config.admin_dir + 'news/'"           ; \
	 echo "news_path=wgo_config.DocumentRoot_path + news_dir" ; \
		echo                                                     ; \
	 echo "icon_dir='/images/news-icons/'" ; \
	 echo "icon_path=wgo_config.DocumentRoot_path + icon_dir" ; \
		echo                                                     ; \
	 echo "pending_queue='news-pending'"                      ; \
	 echo "current_queue='news-current'"                      ; \
	 echo "archive_queue='news-archive'"                      ; \
		echo                                                     ; \
	 echo "news_blotter='news-blotter'"                       ; \
		echo                                                     ; \
	 echo "news_permission=0644"                              ; \
	 echo "datetime_format = '%Y-%m-%d'"                      ; \
	 echo "default_http_host = 'www.gimp.org'"                ; \
	) > news_config.py

news-receiver: news-receiver.py
	sed -e 's|$${LIBDIR}|${LIBDIR}|g' -e 's|$${PYTHON}|${PYTHON}|g' $< > $@
	chmod a+rx $@

news-batch.cgi: news-batch.py
news-edit-action.cgi: news-edit-action.py
news-edit.cgi: news-edit.py
news-index.cgi: news-index.py

clean mrproper:
	/bin/rm -f config.py news-admin.css *.pyc *.cgi news-receiver news_config.py *~

install: install-news

install-news: all
	if [ ! -d "`${PYTHON} -c 'import news_config; print news_config.news_path'`" ]; then install -m 755 -d `${PYTHON} -c 'import news_config; print news_config.news_path'`; fi
	install include/news-archive_footer.html `${PYTHON} -c 'import news_config; print news_config.news_path'`
	install include/news-archive_header.html `${PYTHON} -c 'import news_config; print news_config.news_path'`
	install include/news-current_footer.html `${PYTHON} -c 'import news_config; print news_config.news_path'`
	install include/news-current_header.html `${PYTHON} -c 'import news_config; print news_config.news_path'`
	install include/news-pending_footer.html `${PYTHON} -c 'import news_config; print news_config.news_path'`
	install include/news-pending_header.html `${PYTHON} -c 'import news_config; print news_config.news_path'`
	install news-admin.css                   `${PYTHON} -c 'import news_config; print news_config.news_path'`
	install howto-news.html                  `${PYTHON} -c 'import news_config; print news_config.news_path'`
	install news-batch.cgi                   `${PYTHON} -c 'import news_config; print news_config.news_path'`
	install news-edit-action.cgi             `${PYTHON} -c 'import news_config; print news_config.news_path'`
	install news-edit.cgi                    `${PYTHON} -c 'import news_config; print news_config.news_path'`
	install news-index.cgi                   `${PYTHON} -c 'import news_config; print news_config.news_path'`

	if [ ! -d "`${PYTHON} -c 'import news_config; print news_config.icon_path'`" ]; then install -m 755 -d `${PYTHON} -c 'import news_config; print news_config.icon_path'`; fi
	install icons/lgm-banner-small.png       `${PYTHON} -c 'import news_config; print news_config.icon_path'`
	install icons/release-0.1.png            `${PYTHON} -c 'import news_config; print news_config.icon_path'`
	install icons/release-dev.png            `${PYTHON} -c 'import news_config; print news_config.icon_path'`
	install icons/wilber.png                 `${PYTHON} -c 'import news_config; print news_config.icon_path'`
	install icons/wilber_eeek.png            `${PYTHON} -c 'import news_config; print news_config.icon_path'`
	install icons/wilber_painter.png         `${PYTHON} -c 'import news_config; print news_config.icon_path'`
	install icons/wilber_reading.png         `${PYTHON} -c 'import news_config; print news_config.icon_path'`
	install icons/wilber_wizard.png          `${PYTHON} -c 'import news_config; print news_config.icon_path'`
	install icons/wilber_work.png            `${PYTHON} -c 'import news_config; print news_config.icon_path'`

	install news_config.py ${LIBDIR}
	install news-receiver  ${LIBDIR}

	sed -e 's|$${LIBDIR}|${LIBDIR}|g' -e 's|$${PYTHON}|${PYTHON}|g' wgo_news.py > ${LIBDIR}/wgo_news.py
	sed -e 's|$${LIBDIR}|${LIBDIR}|g' -e 's|$${PYTHON}|${PYTHON}|g' wgo_queue.py > ${LIBDIR}/wgo_queue.py

	if [ ! -d "`${PYTHON} -c 'import news_config; import wgo_queue; print wgo_queue.canonical_path(news_config.pending_queue)'`" ]; then install -m 755 -d `${PYTHON} -c 'import news_config; import wgo_queue; print wgo_queue.canonical_path(news_config.pending_queue)'`; fi
	if [ ! -d "`${PYTHON} -c 'import news_config; import wgo_queue; print wgo_queue.canonical_path(news_config.current_queue)'`" ]; then install -m 755 -d `${PYTHON} -c 'import news_config; import wgo_queue; print wgo_queue.canonical_path(news_config.current_queue)'`; fi
	if [ ! -d "`${PYTHON} -c 'import news_config; import wgo_queue; print wgo_queue.canonical_path(news_config.archive_queue)'`" ]; then install -m 755 -d `${PYTHON} -c 'import news_config; import wgo_queue; print wgo_queue.canonical_path(news_config.archive_queue)'`; fi
