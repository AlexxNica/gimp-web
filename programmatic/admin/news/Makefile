#!/usr/bin/env make

include ../../Makefile.defs

PYPATH="${LIBDIR}:${PYTHONPATH}"
CSSFLAGS=-I../../

all: usage configs news

usage:
	@if [ ${DocumentRoot} = "" ]; then echo "USAGE: make DocumentRoot=<DocumentRoot> target"; exit 1; fi

# names ending in 'path' are full pathnames
# otherwise, they are relative to DocumentRoot

news: news-admin.css news-receiver news-batch.cgi news-edit-action.cgi news-edit.cgi news-index.cgi

news-admin.css: news-admin.cpp

configs: news_config.py

news_config.py: Makefile
	@(echo "#!/usr/bin/env python"                                 ; \
		echo "# THIS FILE IS AUTOMATICALLY GENERATED."                ; \
		echo "# DO NOT EDIT THIS FILE. See Makefile"                  ; \
		echo "import wgo_config"                                      ; \
		echo                                                          ; \
	 echo "news_dir=wgo_config.admin_dir + 'news/'"               ; \
	 echo "news_path=wgo_config.DocumentRoot_path + news_dir"      ; \
		echo                                                          ; \
	 echo "icon_dir=news_dir + 'icons/'"                          ; \
	 echo "icon_path=wgo_config.DocumentRoot_path + icon_dir" ; \
		echo                                                          ; \
	 echo "pending_queue='news-pending'"                           ; \
	 echo "current_queue='news-current'"                           ; \
	 echo "archive_queue='news-archive'"                           ; \
		echo                                                          ; \
	 echo "news_blotter='news-blotter'"                            ; \
		echo                                                          ; \
	 echo "news_permission=0644"                                   ; \
	 echo "datetime_format = '%Y-%m-%d'"                           ; \
	) > news_config.py

news-receiver: news-receiver.py
	sed -e 's|__LIBDIR__|${LIBDIR}|g' $< > $@
	chmod a+rx $@

news-batch.cgi: news-batch.py
news-edit-action.cgi: news-edit-action.py
news-edit.cgi: news-edit.py
news-index.cgi: news-index.py

clean mrproper:
	/bin/rm -f config.py news-admin.css *.pyc *.cgi news-receiver news_config.py

install: install-news

install-news: all
	install --owner=${OWNER} --mode=755 -d `python -c 'import news_config; print news_config.news_path'`
	install --owner=${OWNER} include/news-archive_footer.html `python -c 'import news_config; print news_config.news_path'`
	install --owner=${OWNER} include/news-archive_header.html `python -c 'import news_config; print news_config.news_path'`
	install --owner=${OWNER} include/news-current_footer.html `python -c 'import news_config; print news_config.news_path'`
	install --owner=${OWNER} include/news-current_header.html `python -c 'import news_config; print news_config.news_path'`
	install --owner=${OWNER} include/news-pending_footer.html `python -c 'import news_config; print news_config.news_path'`
	install --owner=${OWNER} include/news-pending_header.html `python -c 'import news_config; print news_config.news_path'`
	install --owner=${OWNER} news-admin.css                   `python -c 'import news_config; print news_config.news_path'`
	install --owner=${OWNER} howto-news.html                  `python -c 'import news_config; print news_config.news_path'`
	install --owner=${OWNER} news-batch.cgi                   `python -c 'import news_config; print news_config.news_path'`
	install --owner=${OWNER} news-edit-action.cgi             `python -c 'import news_config; print news_config.news_path'`
	install --owner=${OWNER} news-edit.cgi                    `python -c 'import news_config; print news_config.news_path'`
	install --owner=${OWNER} news-index.cgi                   `python -c 'import news_config; print news_config.news_path'`
	install --owner=${OWNER} news-receiver                    `python -c 'import news_config; print news_config.news_path'`

	install --owner=${OWNER} --mode=755 -d `python -c 'import news_config; print news_config.icon_path'`
	install --owner=${OWNER} icons/gimp_code.png              `python -c 'import news_config; print news_config.icon_path'`
	install --owner=${OWNER} icons/gimp_construction.png      `python -c 'import news_config; print news_config.icon_path'`
	install --owner=${OWNER} icons/release-0.1.png            `python -c 'import news_config; print news_config.icon_path'`
	install --owner=${OWNER} icons/release-dev.png            `python -c 'import news_config; print news_config.icon_path'`

	install --owner=${OWNER} news_config.py ${LIBDIR}
	install --owner=${OWNER} wgo_news.py        ${LIBDIR}
	install --owner=${OWNER} wgo_queue.py       ${LIBDIR}

	install --owner=${OWNER} --mode=755 -d `python -c 'import wgo_queue; print wgo_queue.canonical_path("")'`
	install --owner=${OWNER} --mode=755 -d `python -c 'import news_config; import wgo_queue; print wgo_queue.canonical_path(news_config.pending_queue)'`
	install --owner=${OWNER} --mode=755 -d `python -c 'import news_config; import wgo_queue; print wgo_queue.canonical_path(news_config.current_queue)'`
	install --owner=${OWNER} --mode=755 -d `python -c 'import news_config; import wgo_queue; print wgo_queue.canonical_path(news_config.archive_queue)'`
