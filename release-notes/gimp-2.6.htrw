<!--#include virtual="/includes/wgo-xhtml-init.xhtml" -->
<title>GIMP 2.6 Release Notes</title>
<!--#include virtual="/includes/wgo-look-feel.xhtml" -->
<!--#include virtual="/includes/wgo-page-init.xhtml" -->

<div class="splash">
<img class="splashbg" alt="#" 
src="images/2.4-releasesplash.jpg" width="640" height="200" />
</div>



<h1>GIMP 2.6 Release Notes</h1>



<h2>Introduction</h2>

<p>
  GIMP 2.6 is an important development milestone for two reasons. It
  contains user interface changes addressing some often recieved
  complaints, and it is the first version of GIMP that has a hard
  dependancy on <a href="http://www.gegl.org/">GEGL</a>, the engine that
  will eventually bring high bit-depth and non-destructive editing to
  GIMP.
</p>


<h2>User Interface Changes</h2>

<h3>The Empty Image Window</h3>
<p>
  A major change is the appearance of an "empty image window". This window
  is a placeholder where your image will eventually open, also a drop zone
  into which you can drag-and-drop your file and  start working.
  You will also notice that the Toolbox menu is gone: it has
  been merged into the image window menu. Toolbox and docks are treated as utility
  windows, so if your window manager supports it, then your problems with
  docks and toolbox getting lost under other windows are over. Unfortunately,
  at this moment utility window hints only work correctly in metacity, the
  GNOME default window manager.
</p>

<h3>Lockable Docks</h3>
<p>
  There are also a couple of nice usability changes concerning docks.
  Have you ever been aggravated to no end because you accidentally closed your 
  neatly set up dock and had to build it from scratch again? 
  That is no longer a source of stress, because the Window menu now holds a list of
  recently closed docks, and just one click can bring your carefully constructed
  setup back to you. Another common annoyance is incidentally dragging tabs out
  of docks. Now GIMP lets you lock your tabs to make sure that does not happen. 
</p>

<h3>Scroll Beyond Image Border</h3>
<p>
  One of the most desired changes over the years has been "overpanning": the ability to pull
  those pesky corners, that are so hard to reach with just the right point of 
  the brush, to the front and center. This is now finally available. Panning does not
  have to stop when the image edge reaches the window edge. You can go on panning,
  and position the area you work on where it is comfortable for you.
</p>

<h3>Improved help system</h3>
<p>
  Ever been bothered by the fact that you need a single page of help but 
  can't get it because you don't have the whole large help docs package 
  installed? Despair no more. GIMP now supports online help. All you need 
  is a network connection and that particular page opens in your browser 
  when you ask for help anywhere in GIMP.
</p>


<h2>Tools</h2>

<h3>Improved Freehand Select Tool</h3>
<p>
  The freehand select tool has been enhanced to support polygon segments
  in selections. Selection segments are all independently adjustable. This 
  significant improvement fills the need for making polygonal selections 
  without creating yet another tool.
</p>

<h3>Brush dynamics</h3>
<p>
  Brush dynamics let you map different brush parameters, commonly at least 
  size and opacity, to one or more of three input dynamics: pressure, 
  velocity and random. Velocity and random are usable with a mouse. The Ink tool, 
  that supported velocity before, has been overhauled and now handles 
  velocity-dependent painting much better.
</p>
<p>
  Brush dynamics have enabled a new feature in stroking paths. There 
  is now a check box under the "paint tool" option, for emulating brush 
  dynamics if you stroke using a paint tool. What this means is that when your 
  stroke is being painted by GIMP, it tells the brush that its pressure and 
  velocity are varying along the length of the stroke. Pressure 
  starts with zero, ramps up to full pressure and then ramps down 
  again to no pressure. Velocity starts from zero and ramps up to full 
  speed by the end of the stroke.
</p>

<h3>Preset saving for color tools</h3>
<p>
  Now you can save presets in all color tools for color 
  adjustments you use frequently.
</p>


<h2>Under the hood</h2>

<h3>GEGL</h3>
<p>
  Most notable of under-the-hood changes are the first steps of 
  <a href="http://gegl.org">GEGL</a> integration. Right now the effect
  on user experience is minimal, but it is an important development
  for the future. Once GEGL integration is complete, GIMP will finally 
  get support for higher color depths, more color spaces and eventually
  non-destructive editing.
</p>

<h3>Cairo For UI Elements</h3>
<p>
  Peeking out from under the hood are subtle differences in the way the UI 
  draws its elements. These changes are due to internally making use of the
  Cairo library to draw UI elements. This is visible for example in the 
  drawing of Layers and Paths docks and Curves dialog.
</p>

<h2>Installation</h2>
<p>
  GIMP 2.5 must <strong>not</strong> be installed in the same prefix
  as other GIMP 2.x versions. If you want to keep your GIMP 2.4
  installation in parallel to GIMP 2.5, you have to choose a separate
  installation prefix at compile-time and ensure that you use different
  library search paths for each version. If you do not set up your
  environment differently for each version, you will experience
  conflicts with the libraries and at least one version is likely to
  fail.
</p>
<p>
  You install the new version into a separate prefix, say /opt/gimp-2.5
  by passing <kbd>--prefix=/opt/gimp-2.5</kbd> to the configure
  script. Then, in order to run the binary installed there, you change
  your environment to look for executables in /opt/gimp-2.5/bin by
  setting <kbd>PATH=/opt/gimp-2.5/bin</kbd> and you tell your linker to
  pick up libraries from /opt/gimp-2.5/lib by setting
  <kbd>LD_LIBRARY_PATH=/opt/gimp-2.5/lib</kbd>.  Do not forget to
  <kbd>export</kbd> both variables.
</p>

<p>
  You can use a tiny wrapper script called gimp-2.5 and place it into
  /usr/local/bin or elsewhere in your PATH. The script would look
  something like this:
</p>

<pre class="code">
#!/bin/sh

PATH=/opt/gimp-2.5/bin:$PATH
export PATH
LD_LIBRARY_PATH=/opt/gimp-2.5/lib
export LD_LIBRARY_PATH

/opt/gimp-2.5/bin/gimp-2.5 "$@"
</pre>

<!--#include virtual="/includes/wgo-page-fini.xhtml" -->
<!--#include virtual="/includes/wgo-xhtml-fini.xhtml" -->
