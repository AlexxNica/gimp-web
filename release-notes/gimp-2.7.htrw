<!--#include virtual="/includes/wgo-xhtml-init.xhtml" -->
<title>GIMP - Release Notes for the 2.7 development snapshots</title>
<!--#include virtual="/includes/wgo-look-feel.xhtml" -->
<!--#include virtual="/includes/wgo-page-init.xhtml" -->

<h1>GIMP 2.7 Release Notes</h1>
<p>
This is an unstable development version of the <b>GNU Image
Manipulation Program</b>. Please realize that this is just a snapshot
of the development tree. We are working hard towards GIMP 2.8, the next
stable release. GIMP 2.7 is in no way a final product. A lot of new
features are incomplete and some things may even be completely broken.
If you need to get work done, please use the stable version, GIMP 2.6.
</p>

<h2>What's New in GIMP 2.7</h2>

<p>
  These release notes are very sketchy. More complete release notes
  will be written when GIMP 2.8 is released. For a complete,
  summarized list of changes, refer to
  the <a href="http://git.gnome.org/cgit/gimp/tree/NEWS">NEWS</a>
  file.
</p>

<h3>UI Changes and Improvements</h3>

<p>
  There have been some significant changes to the UI. The docking bars
  have been removed and replaced with overlayed highlights. The
  dockble drag handle has been removed and the dockable menu button
  has been moved up to the tabs. A new Automatic tab style has been
  added which makes dockable tabs use the available space. It has been
  made possible to have many columns of docks in a single dock
  window. To make dock window titles managable, only show the active
  dockable in the dock window title. A single-window mode has been
  added (still in the works, in particular, it is not possible to
  start up in single-window mode yet).
</p>

<p>
  Support for layer groups have been added. They allow you to organize
  your image into small parts. Still some things missing, like
  allowing to apply layer masks to groups, and a PDB API.
</p>

<p>
  Text editing with the Text Tool is now performed on-canvas instead
  of in a separate window. The editing on-canvas is rather
  sophisticated and tries to mimic text editing capabilities of
  GtkTextView. There are still some polishing left to do here, but it
  works rather nice already. This feature was developed during Google
  Summer of Code 2008.
</p>

<p>
  An infrastructure has been added that allows to embed user interface
  elements on the canvas. This is currently used for text styles in the
  text tool, and (experimentally) when a color correction tool is invoked
  while the canvas is in full-screen mode.
</p>

<p>
  It is now possible to tag GIMP resources such as brushes and
  patterns. The tagging is performed from the respective dockables
  e.g. the Brushes dockable, and it is possible to filter resources
  based on these tags. The tags are saved to an XML file, external to
  the data files themselves. This feature finally enables grouping of
  resources and the plan is to add a bigger set of default resources
  for GIMP 2.8. It is possible to tag multiple resources
  simultaneously in the UI. There are still work that needs to be done
  here, for example providing a set of default brushes. This feature
  was developed during Google Summer of Code 2008.
</p>

<p>
  A rather big conceptual change is that saving and exporting images
  are clearly separated activities. Saving an image can only be done
  in the XCF format, to export into other formats 'File->Export...'
  needs to be used. There are some optimizations for alternative
  workflows such as opening a jpg, polishing it, and quickly exporting
  back to the original file. This conceptual change has also allowed
  us to get rid of the annoying dialogs that warned about the flatting
  of images when saving to non-layered formats. The complete UI spec
  for this can be found
  <a href="http://gui.gimp.org/index.php/Save_%2B_export_specification">here</a>.
</p>

<p>
  Since the keyboard shortcuts Ctrl+E and Ctrl+Shift+E has been taken
  over by the image export mechanisms, new keyboard shortcuts have
  been setup for "Shrink Wrap" and "Fit in Window", namely Ctrl+R and
  Ctrl+Shift+R respectively.
</p>

<p>
  Enhancements have also been made to the size entry widget, the
  widgets that are used for most of the x, y, width, height input. For
  example, in the scale dialog it is now possible to write "50%" in
  the Width field to scale the image to 50% of the width. Expressions
  such as "30in + 40px" and "4 * 5.4in" works too.
</p>

<p>
  The layer modes have been rearranged into more logical and useful
  groups based on the effect they have on compositing of a
  layer. Layer modes that makes the composite lighter are in one
  group, layer modes that makes the composite darker in another group,
  and so on.
</p>

<p>
  GIMP now supports rotating brushes and has had additional
  enhancements to the brush dynamics engine, for example allowing to
  base dynamics on tilt and dynamically change the aspect ratio of
  brushes. The Google Summer of Code 2009 Advanced GUI for Brush
  Dynamics code has also been merged, enabling such things as brush
  dynamics presets.
</p>

<p>
  A question that often arises is how to change the UI language in
  GIMP, which has traditionally been a bit cumbersome. Not any longer,
  it is now possible to change language in Preferences.
</p>


<h3>Minor Changes</h3>
<ul>
  <li>
    Add "lock content" button to the layers, channels and paths
    dialogs, make the lock buttons more compact.
  </li>
  <li>
    In the Preferences, only have one setting for the window hint for
    both the toolbox and the docks.
  </li>
  <li>
    Default to non-fixed-aspect in Canvas Size dialog.
  </li>
  <li>
    Improve Free Select Tool on-canvas feedback.
  </li>
  <li>
    Make it possible to use GEGL for Image Scale.
  </li>
</ul>

<h3>Data</h3>

<p>
  We have started to overhaul the default set of resources and in this
  version there have been some changes to the default set of brushes.
</p>

<h3>Plug-ins</h3>

<p>
  A plug-in for loading JPEG2000 images have been added, and also a
  plug-in for X11 Mouse Cursor files. Also add fundamental OpenRaster
  (.ora) import and export support. Add RGB565 support to the csource
  plug-in.
</p>


<h3>GEGL</h3>

<p>
  The projection code, the code that composes a single image from
  layers, have been ported to GEGL. This includes the layer modes, as
  well as support for nested layers aka layer groups. Also,
  preparations have been made for better and more intuitive handling
  of the floating selection.
</p>


<h3>What's Left To Do</h3>

<p>
  This is an incomplete list of things we want to do before releasing GIMP 2.8:

  <ul>
    <li>Finish single-window mode implementation</li>
    <li>Add layer group PDB API</li>
    <li>Add a better set of default resoures</li>
    <li>Provide default tags for the default resources</li>
    <li>Polish new features</li>
  </ul>
</p>

<h2>Download</h2>
<p>
  The development snapshots of GIMP can be downloaded as source code
  from ftp.gimp.org or from one of the mirrors listed in
  the <a href="wgo:downloads-mirrors">Downloads</a> section.
</p>
<p>
  Distribution of binary packages of the development version is
  discouraged unless it is made clear that this is an early development
  snapshot. Users should be referred to these release notes or similar
  information.
</p>

<h2>Installation</h2>
<p>
GIMP 2.7 must <strong>not</strong> be installed in the same prefix as
other GIMP 2.x versions. If you want to keep your GIMP 2.6
installation in parallel to GIMP 2.7, you have to choose a separate
installation prefix at compile-time and ensure that you use different
library search paths for each version. If you do not set up your
environment differently for each version, you will experience
conflicts with the libraries and at least one version is likely to
fail.
</p>

<p>
Also, do <strong>not</strong> install GIMP 2.7 to /usr/local because
on most systems, its libraries would override the libraries of a stable
GIMP 2.6 installed into /usr, breaking your distribution-installed
GIMP from slightly to completely. The same applies to any prefix
your system uses for the purpose or overriding things in /usr/lib.
</p>

<p>
You install the new version into a separate prefix, say /opt/gimp-2.7
by passing <kbd>--prefix=/opt/gimp-2.7</kbd> to the configure
script. Then, in order to run the binary installed there, you change
your environment to look for executables in /opt/gimp-2.7/bin by
setting <kbd>PATH=/opt/gimp-2.7/bin</kbd> and you tell your linker to
pick up libraries from /opt/gimp-2.7/lib by setting
<kbd>LD_LIBRARY_PATH=/opt/gimp-2.7/lib</kbd>.  Do not forget to
<kbd>export</kbd> both variables.
</p>

<p>
You can use a tiny wrapper script called gimp-2.7 and place it into
/usr/local/bin or elsewhere in your PATH. The script would look
something like this:
</p>

<pre class="code">
#!/bin/sh

PATH=/opt/gimp-2.7/bin:$PATH
export PATH
LD_LIBRARY_PATH=/opt/gimp-2.7/lib
export LD_LIBRARY_PATH

/opt/gimp-2.7/bin/gimp-2.7 "$@"
</pre>

<h2>Bugs</h2>
<p>
If you think you found a bug in a development version, please make
sure that it hasn't been already reported.
Search <a href="home:gimp-bugzilla">Bugzilla</a> before filing a new
bug-report. Here are some interesting Bugzilla queries:
<ul>
  <li>
    <a href="http://bugzilla.gnome.org/buglist.cgi?product=GIMP&target_milestone=2.8&bug_status=UNCONFIRMED&bug_status=NEW&bug_status=ASSIGNED&bug_status=REOPENED">Open bugs with milestone 2.8</a>
  </li>
  <li>
    <a href="http://bugzilla.gnome.org/buglist.cgi?product=GIMP&target_milestone=2.8&bug_status=RESOLVED&bug_status=VERIFIED&bug_status=CLOSED">Resolved bugs with milestone 2.8</a>
  </li>
</ul>
</p>

<h2>Contributing</h2>
<p>
We need your help to make GIMP 2.8 a success. There's still a lot to
do. If you want to join us hacking, show up in #gimp or introduce
yourself on the gimp-developer mailing-list. We are also looking for
people to look after the web-site and update the tutorials. Or you
might want to join the
<a href="http://docs.gimp.org/">documentation team</a>.
</p>


<!--#include virtual="/includes/wgo-page-fini.xhtml" -->
<!--#include virtual="/includes/wgo-xhtml-fini.xhtml" -->
