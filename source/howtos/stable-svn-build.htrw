<!--#include virtual="/includes/wgo-xhtml-init.xhtml" -->
<title>GIMP - Compile Your Subversion Stable Tree</title>
<!--#include virtual="/includes/wgo-look-feel.xhtml" -->
<!--#include virtual="/includes/wgo-page-init.xhtml" -->
<h1>Subversion Is Not That Scary</h1>

<h2>or Build Your Stable GIMP from Subversion</h2>
<p>
  Contributers: Branko Collins, Rodney Dawes, Will Lashell, Roger Leigh, Mitch Natterer, Sven Neumann, Rapha&euml;l Quinet, Manish Singh, Nathan C. Summers, Jeff Trefftz, Lourens Veen, Rebecca J. Walter, Chris Want, (and Kirstens grandparents). 
</p>
<p>
   This document assumes you are working with a fresh gimp-2-2 Subversion checkout as described in the 
   <a href="wgo:source-howtos-stable_svn_get">Subversion Is Not That Scary or Get Your Stable GIMP from Subversion</a> how to. 
</p>

<h2>Check Your Build Tools</h2>
<p>
  First of all, it is best that you have some experience building GIMP from a
  tarball, but of course is not required. A list of the tools you need to build
  your gimp-2-2 Subversion tree can always be found in <a href="wgo:dev-hacking">HACKING</a> 
  in the root directory of your tree.  Here is the current list (probably
  they will not change for this gimp):
</p>
<ul>
  <li><a href="http:Package-autoconf">GNU autoconf 2.54</a></li>
  <li><a href="http:Package-automake">GNU automake 1.7</a></li>
  <li><a href="http:Package-libtool">GNU libtool 1.4</a></li>
  <li><a href="http:Package-gettext">GNU gettext 0.13</a></li>
</ul>
<p>
  To check to see which versions you have (if any), type into a term:
  <kbd>autoconf --version</kbd>.  This should tell if you have the package and if it
  is the default. typing <kbd>auto&lt;tab&gt;</kbd> into a term can reveal other
  versions.  For instance, GNU automake-1.7 is my default automake, but using
  the tab as described (in many shells) revealed that i also have an automake-1.4
  installed as well.  Make certain that you have these tools before you go on.  
</p>
<h2>Define your GIMP Build Environment</h2>
<p>
  Building GIMP requires more knowledge of the paths to your software than the
  typical *nix shell knows about.  The following instructions and scripts assume
  a shell that accepts &quot;export&quot; (as <a
  href="http:Package-bash">bash</a> does). Users of other shells can
  try &quot;setenv&quot; instead. 
</p>
<p>
  Just two additional paths need to be added to the environment to make the build
  tools happy to build GIMP: $ACLOCAL_FLAGS and $PKG_CONFIG_PATH.  There are
  two ways to do this presented in this document.  The second one is the nicest.
</p>
<p>
  In an attempt to make this as pastable as possible, into a terminal
  type <kbd>export PRE=&quot;&lt;prefix-location&gt;&quot;</kbd> 
  where the &lt;prefix-location&gt; is replaced with the proper location.  Usually
  /usr/local.  As an example: <kbd>export PRE=&quot;/usr/local&quot;</kbd>.  Now
  it should be easy to paste the following two lines:
</p>
<p>
  <kbd>export ACLOCAL_FLAGS=&quot;-I $PRE/share/aclocal&quot;</kbd>.
</p>
<p>
  <kbd>export PKG_CONFIG_PATH=&quot;$PRE/lib/pkgconfig:$PGK_CONFIG_PATH&quot;</kbd>.
</p>
<p>
  That should be enough to make a gimp build environment for this login shell.
  However, I have had a much nicer life since i started to use this little script
  written by Rebecca J. Walter. <a href="gimpenv">gimpenv</a>.  it does the work
  described above.  simply save it somewhere and using the login shell you will
  build gimp in, type <kbd>source gimpenv</kbd> and the paths are magically set
  for you.
</p>
<h2>./autogen.sh, The First Challenge</h2>
<p>
  First you should determine your configure options.  You feed them to autogen.sh
  just like you do configure.  autogen.sh feeds them to configure, actually.  One
  option that you might use is --disable-print unless you are certain that gimp-print
  is installed there. Time to type in the term: <kbd>./autogen.sh --disable-print</kbd> 
</p>
<p>
  Some of the autogen spew can be misleading:
</p>
<pre class="code">

Please add the files
  codeset.m4 gettext.m4 glibc21.m4 iconv.m4 isc-posix.m4 lcmessage.m4
  progtest.m4
from the /usr/share/aclocal directory to your autoconf macro directory
or directly to your aclocal.m4 file.
You will also need config.guess and config.sub, which you can get from
ftp://ftp.gnu.org/pub/gnu/config/.

</pre>
<p>
  This is something that configure finds.  autogen.sh is simply telling you that
  it is stupid.  Ignore this.
</p>
<p>
  Now configure starts, and from this point on, building the 
  svn checkout http://svn.gnome.org/svn/gimp/branches/gimp-2-2 gimp
  should be the same as the tarball.  For instance, I got that old
  Parse::RecDescent Notice.  This is a familiar configure error that 
  I would have gotten while building the tarball.
</p>
<h2>Now type 'make' to compile GIMP.</h2>

<!--#include virtual="/includes/wgo-page-fini.xhtml" -->
    <div>
      <span id="footerleft">
        How To Build Your Stable GIMP from Subversion &copy; 2007 Michael Schumacher,<br/>
        based on<br/>
	How To Build Your Stable GIMP from Subversion &copy; 2002 <a href="mail:People-Spears_Carol">Carol Spears</a>
      </span>
      <span id="footerright">
        <a href="mail:People-webmaster">webmaster@gimp.org</a>
      </span>
    </div>
<!--#include virtual="/includes/wgo-xhtml-fini.xhtml" -->
