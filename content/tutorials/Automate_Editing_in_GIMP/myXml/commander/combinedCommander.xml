<combined>Definition
  <commander>Centered Grid<comment>** Set up the grid for Rotate and or Perspective Transform</comment>
    <comment>*    Set values from python-fu image object</comment>
    <command>centerX = theImage.width/2</command>
    <command>centerY = theImage.height/2</command>
    <command>gridSpacing = max(theImage.width, theImage.height)/24</command>
    <comment>*    configure grid with PDB functions</comment>
    <command>pdb.gimp_image_grid_set_offset(theImage, centerX, centerY)</command>
    <command>pdb.gimp_image_grid_set_spacing(theImage, gridSpacing, gridSpacing)</command>
    <command>pdb.gimp_image_grid_set_style(theImage, GRID_ON_OFF_DASH)</command>
    </commander>
  <commander>Color Adjust<comment>Merge the work layers together and raise the color layer to the top</comment>
    <comment>First the Retinex layer</comment>
    <command>RetinexLayer = pdb.gimp_image_get_layer_by_name(theImage, 'Retinex')</command>
    <command>tempLayer = pdb.gimp_image_merge_down(theImage, RetinexLayer, EXPAND_AS_NECESSARY)</command>
    <comment>Then the Sharpen Layer</comment>
    <command>SharpenLayer = pdb.gimp_image_get_layer_by_name(theImage, 'Sharpen')</command>
    <command>newLayer = pdb.gimp_image_merge_down(theImage, SharpenLayer, EXPAND_AS_NECESSARY)</command>
    <command>newLayer.name = 'Contrast'</command>
    <comment>Desaturate the resultant layer</comment>
    <command>pdb.gimp_desaturate_full(newLayer, DESATURATE_LUMINOSITY)</command>
    <comment>Move the Color Layer to the top of the stack, name it ColorBase, set opacity to 80%</comment>
    <command>ColorLayer = pdb.gimp_image_get_layer_by_name(theImage, 'ColorLayer')</command>
    <command>ColorLayer.name = 'ColorBase'</command>
    <command>pdb.gimp_image_raise_item_to_top(theImage, ColorLayer)</command>
    <command>ColorLayer.opacity = 80.0</command>
    <comment>Copy the Color Layer, call it ColorAdd, set opacity to 20%.  Adjust by hand as needed.</comment>
    <command>ColorAdd = pdb.gimp_layer_copy(ColorLayer, FALSE)</command>
    <command>theImage.add_layer(ColorAdd, 0)</command>
    <command>ColorAdd.name = 'ColorAdd'</command>
    <command>ColorAdd.opacity = 20.0</command>
    </commander>
  <commander>Add Color Layer<comment>Make the top layer active &amp; assign to currentLayer</comment>
    <command>theImage.active_layer = theImage.layers[0]</command>
    <command>currentLayer = theImage.active_layer</command>
    <comment>Copy to tempLayer, desaturate it, &amp; set mode to GRAIN_EXTRACT</comment>
    <command>tempLayer = currentLayer.copy()</command>
    <command>theImage.add_layer(tempLayer, 0)</command>
    <command>pdb.gimp_desaturate_full(tempLayer, DESATURATE_LUMINOSITY)</command>
    <command>tempLayer.mode = GRAIN_EXTRACT_MODE</command>
    <comment>Copy visible to the layer we will keep - same image now in NORMAL mode</comment>
    <command>colorLayer = pdb.gimp_layer_new_from_visible(theImage, theImage, 'ColorLayer')</command>
    <command>theImage.add_layer(colorLayer, len(theImage.layers))</command>
    <comment>Set Color Layer mode to GRAIN_MERGE &amp; get ride of temp layer</comment>
    <command>colorLayer.mode = GRAIN_MERGE_MODE</command>
    <command>theImage.remove_layer(tempLayer)</command>
    <command>theImage.active_layer = theImage.layers[0]</command>
    </commander>
  <commander>Create Dynamic Range Layer<comment>Create a Dynamic Range Layer and add it at the top of the stack</comment>
    <comment>Run autostretch_hsv leave mode Normal and at 100% opacity</comment>
    <command>original = theImage.layers[0]</command>
    <command>DynRange = original.copy()</command>
    <command>DynRange.name = "DynRange"</command>
    <command>theImage.add_layer(DynRange, 0)</command>
    <command>pdb.plug_in_autostretch_hsv(theImage, DynRange)</command>
    </commander>
  <commander>Expand Canvas<comment>Expand the canvas by 25 percent -easier to rotate / perspective</comment>
    <command>adjust = max(theImage.height, theImage.width)/4</command>
    <command>theImage.resize(theImage.width + adjust, theImage.height+ adjust, adjust/2, adjust/2)</command>
    </commander>
  <commander>Normal Grid and Canvas<comment>Shrink the Canvas back to fit the layer</comment>
    <command>theImage.resize_to_layers()</command>
    <comment>Set grid to origin and size = image</comment>
    <command>pdb.gimp_image_grid_set_offset(theImage, 0, 0)</command>
    <command>pdb.gimp_image_grid_set_spacing(theImage, theImage.width, theImage.height)</command>
    </commander>
  <commander>Rename Base Layer<comment>Rename the base layer to 'Original'</comment>
    <command>theLayer = theImage.layers[0]</command>
    <command>theLayer.name = 'Original'</command>
    </commander>
  <commander>Retinex-Filter<comment>Add a new Retinex layer and apply the retinex filter with default settings</comment>
    <command>RetinexLayer = pdb.gimp_layer_new_from_visible(theImage, theImage, "Retinex")</command>
    <command>theImage.add_layer(RetinexLayer,0)</command>
    <comment>Retinex parameters - Scale = 240; ScaleDiv = 3; Level = 0; Dynamic = 1.2</comment>
    <command>pdb.plug_in_retinex(theImage, RetinexLayer, 240, 3, 0, 1.2)</command>
    <comment>Make the retinex layer B&amp;W - retinex distorts color</comment>
    <command>pdb.gimp_desaturate_full(RetinexLayer, 1)</command>
    <command>RetinexLayer.mode = OVERLAY_MODE</command>
    <command>RetinexLayer.opacity = 75.0</command>
    <comment>Adjust the opacity based on Property EnhanceContrastLevel</comment>
    <command>ContrastLevel = str(theImage.parasite_find('EnhanceContrastLevel'))</command>
    <command>if (ContrastLevel == 'EXTRA'): RetinexLayer.opacity = 100.0</command>
    <command>if (ContrastLevel == 'NORMAL'): RetinexLayer.opacity = 75.0</command>
    <command>if (ContrastLevel == 'MID'): RetinexLayer.opacity = 50.0</command>
    <command>if (ContrastLevel == 'NONE'): RetinexLayer.opacity = 0.0</command>
    </commander>
  <commander>Sharpen<comment>Add a new Sharpend layer and apply the sharpening filter with default settings</comment>
    <command>SharpenLayer = pdb.gimp_layer_new_from_visible(theImage, theImage, "Sharpen")</command>
    <command>theImage.add_layer(SharpenLayer,0)</command>
    <comment>Sharpen parameters - Radius = 5.0; Amount = 0.5; Threshold = 0</comment>
    <command>pdb.plug_in_unsharp_mask(theImage, SharpenLayer, 5.0, 0.5, 0)</command>
    <comment>Adjust the opacity based on Property EnhanceContrastLevel</comment>
    <command>SharpenLayer.opacity = 75.0</command>
    </commander>
  </combined>