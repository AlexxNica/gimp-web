<!--#include virtual="/includes/wgo-xhtml-init.xhtml" -->
<title>GIMP - How To Create and Submit a Patch</title>
<!--#include virtual="/includes/wgo-look-feel.xhtml" -->
<!--#include virtual="/includes/wgo-howto-bugs-init.xhtml" -->

<h1>How To Create and Submit a Patch</h1>

<h2>Introduction</h2>
<p>
  A patch is exactly what the word says: a small piece of code used to repair a breach.
  It is normally a plain text file containing only the differences between the current version of the
  code and the fixed version.
</p>
<p>
  Many people have been submitting patches to the mailing lists and this is a small problem,
  the patch might be big and sending the patch via mail is not a very good idea.
  This howto here to remind you not to send the patch via the mailing list but using the tools outside
  of the mailing lists.
</p>
<p>
  I hope that people will start to give mailing lists a bit more respect and maybe will stop sending
  patches to the list after reading this.
</p>

<h1>Generating a Patch</h1>
<h2>Against Current CVS</h2>
<p>
  The preferred way of creating a patch is to create it against current CVS. The ensures that the patch works
  with the latest edition of the source code and makes it easier for the developers to apply the patch.
</p>
<p>
  To generate the patch you need to check out a copy of the source code from CVS. More information on how
  to do this can be found in the <a href="wgo:source-howtos-stable_cvs_get">CVS HOWTO</a>. After you have made the
  changes to the source code and made sure it compiles and works as expected, you can create the patch file using
  the command <kbd>cvs diff -up &gt; /path/to/patchfile.patch</kbd>. It is recommended to include the <kbd>diff -up</kbd>
  line in ~/.cvsrc. To summarize the steps:
</p>
<ul>
  <li>Check out a copy of the source code from CVS</li>
  <li>Apply your changes to the source</li>
  <li>Re-compile and make sure it works as expected</li>
  <li>Generate the patch file using <kbd>cvs diff -up &gt; /path/to/patchfile.patch</kbd></li>
  <li>Examine the resulting .patch file to make sure it contains only the intended changes</li>
  <li>Submit the patch using Bugzilla, see below</li>
</ul>

<h2>Against the Latest Release</h2>
<p>
  If you do not have access to CVS you can generate the patch against the latest release.
</p>
<p>
  To generate the patch you will need two copies of the source code: one that is unmodified and one containing
  your changes to the source. Start by downloading the source code of the latest release, extract it and make a copy
  of the entire source directory. After you have made your changes to one of the source directories and made sure it
  compiles and works as expected, you can create the patch file using the command
  <kbd>diff -rup /path/to/unmodified/source /path/to/modified/source &gt; /path/to/patchfile.patch</kbd>. To summarize the steps:
</p>
<ul>
  <li>Download the source code of the latest release</li>
  <li>Extract the source code</li>
  <li>Make a copy of the source code directory</li>
  <li>Apply your changes to the copy of the source code</li>
  <li>Re-compile and make sure it works as expected</li>
  <li>Do a <kbd>make clean</kbd> to remove files generated during build</li>
  <li>Generate the patch file using <kbd>diff -rup /path/to/unmodified/source /path/to/modified/source &gt; /path/to/patchfile.patch</kbd></li>
  <li>Examine the resulting .patch file to make sure it contains only the intended changes</li>
  <li>Submit the patch using Bugzilla, see below</li>
</ul>

<h1>Using Bugzilla</h1>
<h2>Closing a bug patch</h2>
<p>
  The best way to submit a patch to the GIMP development is to send it to Bugzilla and inform
  the rest of the team what the patch is doing:
</p>
<ul>
  <li>Is it closing bugs?</li>
  <li>Is it a enhancement?</li>
  <li>What are the changes in the code?</li>
  <li>Are there any know problems with the patch?</li>
</ul>
<p>
  If you have a patch that is closing bugs then you can attach the patch to the bug/bugs explaining
  what the patch is doing. You can also inform the gimp-devel mailing list about the closed bug but don't
  attach the patch to the mail sent to the list, instead put the bug links in the mail where the attached
  patch is located.
</p>
<ol>
  <li>Test the patch locally on your own machine and look if it closes the bug there.</li>
  <li>Find the bug it is closing in the <a href="http://bugzilla.gnome.org/buglist.cgi?product=GIMP&amp;bug_status=NEW&amp;bug_status=ASSIGNED&amp;bug_status=REOPENED">Open bugs</a> list.</li>
  <li>Attach the patch to the bug report.</li>
  <li>Explain what the patch is doing and if there might be any problems with the patch.</li>
  <li>If you want to send a mail to the gimp-devel list and explain it there also. 
  Remember to have the bug number or even better the link to the bug in the mail. 
  Don't attach the patch to the mail.</li>
</ol>
<p>
  Now you just have to wait for the developers and maintainers to look at the patch and see if this
  is really closing the bug and if it might open new bugs. With a bit of luck it will be implemented
  in a release done soon either stable or development version.
</p>

<h3>How about enhancements?</h3>
<p>
  Start a new bug report, mark it as enhancement and put the patch in that report on Bugzilla. 
  This will give developers a good explanation of why you did the patch and how the patch 
  changes GIMP source or adds new things to it. The only thing you need to add to the 
  report is that it is an enhancement and explain the patch a little bit. A simple way to this is to:
</p>
<ol>
  <li>Go to <a href="http://bugzilla.gnome.org/enter_bug.cgi?product=GIMP">Submit a new bug report</a>.</li>
  <li>Fire up a new report and select enhancement instead of the others used by normal bug reporting.</li>
  <li>Attach the patch and explain what you wanted to get going with the help of this patch.</li>
  <li>Remember to explain the purpose of the patch and who might want to use this enhancement.</li>
</ol>
<p>
  Thats it! You have done a patch reporting enhancement all that is left is for the developers to look at the report
  and the patch. They might get even better ideas of how to implement this with the help of the patch you sent.
</p>

<h2>Remember to</h2>
<ul>
  <li>use the same coding style, see file HACKING</li>
  <li>never send the patch as a attachment to the mailing lists.</li>
  <li>explain what the patch is doing to GIMP.</li>
  <li>report the bugs that the patch is closing.</li>
  <li>always test the patch before submitting it.</li>
  <li>write what version it is tested on. stable? development?</li>
</ul>

<!--#include virtual="/includes/wgo-howto-bugs-fini.xhtml" -->
    <div>
      <span id="footerleft">
        How To &copy; 2002-2003 <a href="mail:People-Mattisson_Niklas">Niklas Mattisson</a> and
        <a href="mail:People-Andersen_Henrik_Brix">Henrik Brix Andersen</a>
      </span>
      <span id="footerright">
        <a href="mailto:webmaster@gimp.org">webmaster@gimp.org</a>
      </span>
    </div>
<!--#include virtual="/includes/wgo-xhtml-fini.xhtml" -->
